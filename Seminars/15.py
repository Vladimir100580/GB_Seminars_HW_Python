# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k.
# Программа получает на вход одно натуральное число k, не превосходящее 10^5.
# Программа должна вывести все пары дружественных чисел, каждое из которых не превосходит k.
# Пары необходимо выводить по одной в строке, разделяя пробелами. Каждая пара должна быть выведена только один раз
# (перестановка чисел новую пару не дает).


import time

k = int(input("Введите k  "))

t0 = time.time()
def sumdel(k):
    sum = 0
    sqk = int(k ** 0.5)
    for i in range(2, sqk + 1):    # у всех натуральных чисел есть делитель равный единице, добавляем ее в конце.
        if k % i == 0:
            if i == sqk:
                sum += i        # если у числа будет делитель равный sqr(k), то его добавляем к сумме лишь 1 раз
            else:
                sum += i + k / i    # иначе добавляем сам делитель и парный ему (i и k/i)
    return sum + 1


dict = {}
for i in range(k + 1):
    dict[i] = sumdel(i)

l1 = []
for n in range(2, k):
    m = dict[n]
    if n != m and [m, n] not in l1 and n == dict.get(dict[n], 0):
        l1.append([n, m])
        print(int(n), int(m))


# Вариант без словаря
# l1 = []
# for n in range(2, k):
#     m = sumdel(n)
#     if n != m and [m, n] not in l1 and n == sumdel(m):
#         l1.append([n, m])
#         print(int(n), int(m))


print(f'Время выполнения: {round(time.time() - t0, 3)}с')