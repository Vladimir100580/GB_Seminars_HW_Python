# 1. Необходимо написать алгоритм поиска всех доступных комбинаций
# (посчитать количество) для количества кубиков K с количеством граней N.

import time

n = 6 # количество граней (система счисления)
k = 8 # количество кубиков. На моем ноуте, при данных условиях, считает 4.34 сек. (с подключенным питанием 2.6 сек)
start = time.time()
lgr = 0    #int((n ** k - 1) / (n - 1)) к нулей
rgr = n ** k     # к граней с числом n-1 (т.к. нумеруем грани от 0 до n - 1)
li = set()          # множество, в котором будут храниться упорядоченные строки, выпавших значений на верхних гранях кубиков
for i in range(lgr, rgr):     # 000...00 (к нулей) до (n-1)(n-1)...(n-1) тоже к цифр, после перевода в n-ричную систему счисления в строках 14-16
    r = ''
    for j in range(k):        # перевод десятичного числа, в k-значное число, в n-ричной СС.
        r += str(i % n)
        i = i // n
    li.add(''.join(sorted(r)))    # синтаксический сахарок
print(len(li))
print(time.time() - start)

